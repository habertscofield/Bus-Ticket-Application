// Generated by view binder compiler. Do not edit!
package com.example.bus_ticketapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bus_ticketapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTicketDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView busNameTicket;

  @NonNull
  public final TextView emailTicket;

  @NonNull
  public final TextView fromTicket;

  @NonNull
  public final TextView journeyDateTicket;

  @NonNull
  public final TextView mobileNumberTicket;

  @NonNull
  public final TextView passengerNameTicket;

  @NonNull
  public final Button printTicket;

  @NonNull
  public final TextView seatTicket;

  @NonNull
  public final TextView seatsTicket;

  @NonNull
  public final TextView ticketIDTicket;

  @NonNull
  public final TextView timeTicket;

  @NonNull
  public final TextView toTicket;

  @NonNull
  public final TextView totalCostTicket;

  private ActivityTicketDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView busNameTicket, @NonNull TextView emailTicket, @NonNull TextView fromTicket,
      @NonNull TextView journeyDateTicket, @NonNull TextView mobileNumberTicket,
      @NonNull TextView passengerNameTicket, @NonNull Button printTicket,
      @NonNull TextView seatTicket, @NonNull TextView seatsTicket, @NonNull TextView ticketIDTicket,
      @NonNull TextView timeTicket, @NonNull TextView toTicket, @NonNull TextView totalCostTicket) {
    this.rootView = rootView;
    this.busNameTicket = busNameTicket;
    this.emailTicket = emailTicket;
    this.fromTicket = fromTicket;
    this.journeyDateTicket = journeyDateTicket;
    this.mobileNumberTicket = mobileNumberTicket;
    this.passengerNameTicket = passengerNameTicket;
    this.printTicket = printTicket;
    this.seatTicket = seatTicket;
    this.seatsTicket = seatsTicket;
    this.ticketIDTicket = ticketIDTicket;
    this.timeTicket = timeTicket;
    this.toTicket = toTicket;
    this.totalCostTicket = totalCostTicket;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTicketDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTicketDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ticket_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTicketDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.busNameTicket;
      TextView busNameTicket = ViewBindings.findChildViewById(rootView, id);
      if (busNameTicket == null) {
        break missingId;
      }

      id = R.id.emailTicket;
      TextView emailTicket = ViewBindings.findChildViewById(rootView, id);
      if (emailTicket == null) {
        break missingId;
      }

      id = R.id.fromTicket;
      TextView fromTicket = ViewBindings.findChildViewById(rootView, id);
      if (fromTicket == null) {
        break missingId;
      }

      id = R.id.journeyDateTicket;
      TextView journeyDateTicket = ViewBindings.findChildViewById(rootView, id);
      if (journeyDateTicket == null) {
        break missingId;
      }

      id = R.id.mobileNumberTicket;
      TextView mobileNumberTicket = ViewBindings.findChildViewById(rootView, id);
      if (mobileNumberTicket == null) {
        break missingId;
      }

      id = R.id.passengerNameTicket;
      TextView passengerNameTicket = ViewBindings.findChildViewById(rootView, id);
      if (passengerNameTicket == null) {
        break missingId;
      }

      id = R.id.print_ticket;
      Button printTicket = ViewBindings.findChildViewById(rootView, id);
      if (printTicket == null) {
        break missingId;
      }

      id = R.id.seatTicket;
      TextView seatTicket = ViewBindings.findChildViewById(rootView, id);
      if (seatTicket == null) {
        break missingId;
      }

      id = R.id.seatsTicket;
      TextView seatsTicket = ViewBindings.findChildViewById(rootView, id);
      if (seatsTicket == null) {
        break missingId;
      }

      id = R.id.ticketIDTicket;
      TextView ticketIDTicket = ViewBindings.findChildViewById(rootView, id);
      if (ticketIDTicket == null) {
        break missingId;
      }

      id = R.id.timeTicket;
      TextView timeTicket = ViewBindings.findChildViewById(rootView, id);
      if (timeTicket == null) {
        break missingId;
      }

      id = R.id.toTicket;
      TextView toTicket = ViewBindings.findChildViewById(rootView, id);
      if (toTicket == null) {
        break missingId;
      }

      id = R.id.totalCostTicket;
      TextView totalCostTicket = ViewBindings.findChildViewById(rootView, id);
      if (totalCostTicket == null) {
        break missingId;
      }

      return new ActivityTicketDetailsBinding((RelativeLayout) rootView, busNameTicket, emailTicket,
          fromTicket, journeyDateTicket, mobileNumberTicket, passengerNameTicket, printTicket,
          seatTicket, seatsTicket, ticketIDTicket, timeTicket, toTicket, totalCostTicket);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
